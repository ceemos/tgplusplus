/*
 * MainFrame.java
 *
 * Created on 26.07.2011, 16:29:55
 */
package jet;

import java.awt.event.KeyEvent;

/**
 *
 * @author marcel
 */
public class MainFrame extends javax.swing.JFrame {
    
    ChatClient client;
    Thread pollThread;

    /** Creates new form MainFrame */
    public MainFrame() {
        client = new ChatClient();
        initComponents();
        jTextField1.requestFocusInWindow();
        jTextField1.setSelectionStart(0);
        jTextField1.setSelectionEnd(100);
        
        runPollThread();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(200, 100));

        jTextField1.setText("msg/cmd");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField1, java.awt.BorderLayout.PAGE_END);

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && !evt.isShiftDown()){
            handleCommand(jTextField1.getText());
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    private void handleCommand(String text) {
        if(text.startsWith("/")){
            String[] teile = text.split(" ");
            if(teile[0].equals("/local")){
                client.setLocaluser(teile[1]);
                printStatus("Local username set to " + teile[1]);
                pollThread.interrupt();
            } else if (teile[0].equals("/remote")) {
                client.setRemoteuser(teile[1]);
                printStatus("Remote username set to " + teile[1]);
            }
        } else {
            client.sendMsg(text);
            printStatus(client.getLocaluser() + ": " + text);
        }
    }

    private void printStatus(String string) {
        jTextPane1.setText(jTextPane1.getText() + "\n" + string);
        System.out.println("Status: " + string);
    }

    private void runPollThread() {
        pollThread = new Thread(new Runnable() {

            @Override
            public void run() {
                for(;;){
                    final String msg = client.pollMsg();
                    if (msg != null){
                        java.awt.EventQueue.invokeLater(new Runnable() {

                            @Override
                            public void run() {
                                printStatus(client.getRemoteuser() + ": " + msg);
                            }
                        });
                    }
                }
            }
        });
        pollThread.start();
    }
}
